name: Build & Deploy MyMoviesApp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out source
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Setup .NET 8 (matches your global.json)
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      # 3) Setup Node (version 18) so we can build Angular
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 4) Install Angular dependencies & build
      - name: Install & Build Angular
        run: |
          cd MyApp
          npm install
          npm run build -- --configuration production

      # 5) Restore .NET solution
      - name: Restore .NET
        run: dotnet restore MyMoviesApp.sln

      # 6) Build .NET (Release)
      - name: Build .NET
        run: dotnet build MyMoviesApp.sln --configuration Release --no-restore

      # 7) Publish the .NET API project
      - name: Publish .NET
        run: dotnet publish ./MyMoviesApp.Api/MyMoviesApp.Api.csproj --configuration Release --output out

      # 8) (Optional) Deploy to Azure Web App
      #    If you're using Azure Web App, fill in your actual app name and secret
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "mymoviesapp1234"   # <-- change to your actual Azure Web App name
          slot-name: "Production"
          publish-profile: ${{ secrets.AzureWebAppPublishProfile }}
          package: "./MyMoviesApp.Api/out"
