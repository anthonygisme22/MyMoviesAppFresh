name: Build_and_Deploy_MyMoviesApp

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Set up Node for your Angular front-end
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3) Install & build Angular (inside MyApp folder)
      - name: Install and build Angular app
        working-directory: MyApp
        run: |
          npm ci
          npm run build

      # 4) DEBUG: Show exactly what's under MyApp/dist
      - name: üîç Listing MyApp/dist contents
        run: |
          echo "---- MyApp/dist ----"
          ls -R MyApp/dist || echo "MyApp/dist directory not found"

      # 5) Install .NET 8 (matches your global.json)
      - name: Set up .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 6) Copy static files into the API wwwroot, then restore/build/publish
      - name: Publish .NET (with Angular files)
        run: |
          # clean out old static assets
          rm -rf MyMoviesApp.Api/wwwroot/*

          # copy whatever showed up in MyApp/dist
          cp -R MyApp/dist/* MyMoviesApp.Api/wwwroot/ || echo "No files copied ‚Äì check the debug above"

          # now build & publish
          dotnet restore MyMoviesApp.sln
          dotnet build MyMoviesApp.sln --configuration Release
          dotnet publish MyMoviesApp.Api/MyMoviesApp.Api.csproj \
            --configuration Release \
            --output publish

      # 7) Log into Azure (you need AZURE_CREDENTIALS in your repo secrets)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 8) Deploy the published output
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: mymoviesapp1234    # ‚Üê make sure this matches your actual Web App name
          package: publish
