{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/movies/watchlist/watchlist.component.ts","./src/app/movies/watchlist/watchlist.component.html","./src/app/app.component.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/movies/movie-list/movie-list.component.ts","./src/app/movies/movie-list/movie-list.component.html","./src/app/auth/auth.interceptor.ts","./src/app/recommendations/recommendations.component.ts","./src/app/recommendations/recommendations.component.html","./src/app/app.routes.ts","./src/app/movies/movie-detail/movie-detail.component.ts","./src/app/movies/movie-detail/movie-detail.component.html","./src/main.ts","./src/environments/environment.ts","./src/app/auth/auth.service.ts","./src/app/admin/feature-flags.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/movies/movie.service.ts","./src/app/home/home.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/auth/auth.guard.ts","./src/app/admin/flags.component.ts","./src/app/admin/flags.component.html","./src/app/admin/admin-movies.service.ts","./src/app/admin/admin-movies.component.ts","./src/app/admin/admin-movies.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MovieService, WatchlistItem } from '../movie.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-watchlist',\r\n  imports: [CommonModule],\r\n  templateUrl: './watchlist.component.html',\r\n  styleUrls: ['./watchlist.component.css']\r\n})\r\nexport class WatchlistComponent implements OnInit {\r\n  watchlist: WatchlistItem[] = [];\r\n  loading = true;\r\n  error = '';\r\n  imageBaseUrl = environment.tmdbImageBaseUrl;\r\n\r\n  constructor(private movieService: MovieService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.movieService.getWatchlist().subscribe({\r\n      next: data => {\r\n        this.watchlist = data;\r\n        this.loading = false;\r\n      },\r\n      error: () => {\r\n        this.error = 'Failed to load watchlist.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  remove(id: number): void {\r\n    this.movieService.removeFromWatchlist(id).subscribe({\r\n      next: () => {\r\n        this.watchlist = this.watchlist.filter(w => w.movie.movieId !== id);\r\n      },\r\n      error: () => console.error('Failed to remove from watchlist')\r\n    });\r\n  }\r\n}\r\n","<div class=\"pt-20 p-4\">\r\n  <h1 class=\"text-2xl font-bold mb-4\">Your Watchlist</h1>\r\n\r\n  <div *ngIf=\"loading\" class=\"text-gray-600\">Loading watchlist…</div>\r\n\r\n  <div *ngIf=\"!loading && watchlist.length; else empty\">\r\n    <ul class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n      <li *ngFor=\"let item of watchlist\" class=\"bg-white rounded shadow overflow-hidden\">\r\n        <img [src]=\"imageBaseUrl + item.movie.posterUrl\"\r\n             alt=\"{{ item.movie.title }}\"\r\n             class=\"w-full h-48 object-cover\" />\r\n        <div class=\"p-2\">\r\n          <h2 class=\"font-bold\">{{ item.movie.title }}</h2>\r\n          <p class=\"text-gray-600\">{{ item.movie.year }}</p>\r\n          <button (click)=\"remove(item.movie.movieId!)\" class=\"mt-2 text-red-600\">\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <ng-template #empty>\r\n    <p class=\"text-gray-600\">Your watchlist is empty.</p>\r\n  </ng-template>\r\n\r\n  <p *ngIf=\"error\" class=\"text-red-600 mt-4\">{{ error }}</p>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-root',\r\n  imports: [\r\n    NavbarComponent,\r\n    RouterModule   // for <router-outlet>\r\n  ],\r\n  template: `\r\n    <app-navbar></app-navbar>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class AppComponent { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-profile',\r\n  imports: [CommonModule],\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  username: string | null = null;\r\n  role: string | null = null;\r\n\r\n  constructor(private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.username = this.auth.getUsername();\r\n    this.role = this.auth.getRole();\r\n  }\r\n}\r\n","<div class=\"pt-16 p-4\">\r\n  <h2 class=\"text-2xl font-bold\">My Profile</h2>\r\n  <div class=\"mt-4 space-y-2\">\r\n    <p><strong>Username:</strong> {{ username }}</p>\r\n    <p><strong>Role:</strong> {{ role }}</p>\r\n  </div>\r\n</div>\r\n","// File: frontend/src/app/movies/movie-list/movie-list.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';   // ← Import RouterModule\r\nimport { MovieService, Movie, PagedResponse } from '../movie.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-movie-list',\r\n  imports: [CommonModule, FormsModule, RouterModule],       // ← Include RouterModule here\r\n  templateUrl: './movie-list.component.html',\r\n  styleUrls: ['./movie-list.component.css']\r\n})\r\nexport class MovieListComponent implements OnInit {\r\n  movies: Movie[] = [];\r\n  error = '';\r\n  imageBaseUrl = environment.tmdbImageBaseUrl;\r\n\r\n  page = 1;\r\n  pageSize = 25;\r\n  totalItems = 0;\r\n  totalPages = 0;\r\n  yearFrom?: number;\r\n  yearTo?: number;\r\n  minRating?: number;\r\n  maxRating?: number;\r\n\r\n  constructor(private movieService: MovieService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadPage();\r\n  }\r\n\r\n  loadPage(): void {\r\n    this.error = '';\r\n    this.movieService\r\n      .getMovies(\r\n        this.page,\r\n        this.pageSize,\r\n        this.yearFrom,\r\n        this.yearTo,\r\n        this.minRating,\r\n        this.maxRating\r\n      )\r\n      .subscribe({\r\n        next: (data: PagedResponse<Movie>) => {\r\n          this.movies = data.items;\r\n          this.totalItems = data.total;\r\n          this.page = data.page;\r\n          this.pageSize = data.pageSize;\r\n          this.totalPages = Math.ceil(data.total / data.pageSize);\r\n        },\r\n        error: () => {\r\n          this.error = 'Failed to load movies.';\r\n        }\r\n      });\r\n  }\r\n\r\n  applyFilters(): void {\r\n    this.page = 1;\r\n    this.loadPage();\r\n  }\r\n\r\n  prevPage(): void {\r\n    if (this.page > 1) {\r\n      this.page--;\r\n      this.loadPage();\r\n    }\r\n  }\r\n\r\n  nextPage(): void {\r\n    if (this.page < this.totalPages) {\r\n      this.page++;\r\n      this.loadPage();\r\n    }\r\n  }\r\n}\r\n","<!-- File: frontend/src/app/movies/movie-list/movie-list.component.html -->\r\n<div class=\"pt-20 p-4 space-y-4\">\r\n  <!-- Filters (unchanged) -->\r\n  <form (ngSubmit)=\"applyFilters()\" class=\"flex flex-wrap gap-2 items-end\">\r\n    <!-- … your filter inputs … -->\r\n  </form>\r\n\r\n  <!-- Movie Grid -->\r\n  <div class=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\r\n    <ng-container *ngFor=\"let m of movies\">\r\n      <!-- Wrap entire card in a link -->\r\n      <a [routerLink]=\"['/movies', m.movieId]\"\r\n         class=\"block bg-white rounded shadow overflow-hidden hover:shadow-lg transition\">\r\n        <img [src]=\"imageBaseUrl + m.posterUrl\"\r\n             alt=\"{{ m.title }}\"\r\n             class=\"w-full h-40 object-cover\" />\r\n        <div class=\"p-2\">\r\n          <h3 class=\"font-semibold\">{{ m.title }}</h3>\r\n          <p class=\"text-gray-600\">{{ m.year }}</p>\r\n        </div>\r\n      </a>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- Pagination (unchanged) -->\r\n  <div class=\"flex justify-center items-center space-x-4 mt-4\">\r\n    <button (click)=\"prevPage()\" [disabled]=\"page <= 1\" class=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\">\r\n      Previous\r\n    </button>\r\n    <span>Page {{ page }} of {{ totalPages }}</span>\r\n    <button (click)=\"nextPage()\" [disabled]=\"page >= totalPages\" class=\"px-3 py-1 bg-gray-200 rounded disabled:opacity-50\">\r\n      Next\r\n    </button>\r\n  </div>\r\n\r\n  <p *ngIf=\"error\" class=\"text-red-600 text-center\">{{ error }}</p>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private auth: AuthService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = this.auth.getToken();\r\n    if (token) {\r\n      const authReq = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return next.handle(authReq);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","// File: frontend/src/app/recommendations/recommendations.component.ts\r\n\r\nimport { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\ninterface RecommendationDto {\r\n  title: string;\r\n  reason: string;\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-recommendations',\r\n  imports: [CommonModule, FormsModule, HttpClientModule],  // ← import HttpClientModule\r\n  templateUrl: './recommendations.component.html',\r\n  styleUrls: ['./recommendations.component.css']\r\n})\r\nexport class RecommendationsComponent {\r\n  prompt = '';\r\n  recommendations: RecommendationDto[] = [];\r\n  rawResponse = '';\r\n  error = '';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRecommendations() {\r\n    this.error = '';\r\n    this.recommendations = [];\r\n    this.rawResponse = '';\r\n\r\n    this.http\r\n      .post<RecommendationDto[] | { rawResponse: string } | { error: string }>(\r\n        `${environment.apiUrl}/recommendations`,\r\n        { prompt: this.prompt }\r\n      )\r\n      .subscribe({\r\n        next: data => {\r\n          if ('error' in data) {\r\n            this.error = data.error;\r\n          } else if (Array.isArray(data)) {\r\n            this.recommendations = data;\r\n          } else if ('rawResponse' in data) {\r\n            this.rawResponse = data.rawResponse;\r\n          }\r\n        },\r\n        error: err => {\r\n          this.error = err.error?.error || 'Failed to get recommendations.';\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- File: frontend/src/app/recommendations/recommendations.component.html -->\r\n<div class=\"pt-20 p-4\">\r\n  <h1 class=\"text-2xl font-bold mb-4\">AI Recommendations</h1>\r\n\r\n  <div class=\"mb-4\">\r\n    <label class=\"block font-semibold\">Enter your prompt:</label>\r\n    <textarea [(ngModel)]=\"prompt\"\r\n              rows=\"3\"\r\n              class=\"w-full border p-2\"\r\n              placeholder=\"Describe what kind of movies you like...\"></textarea>\r\n  </div>\r\n\r\n  <button (click)=\"getRecommendations()\"\r\n          class=\"bg-bb-blue text-white px-4 py-2 rounded\">\r\n    Get Recommendations\r\n  </button>\r\n\r\n  <p *ngIf=\"error\" class=\"text-red-600 mt-2\">{{ error }}</p>\r\n\r\n  <div *ngIf=\"recommendations.length > 0\" class=\"mt-4\">\r\n    <h2 class=\"text-xl font-semibold\">Recommended Movies</h2>\r\n    <ul class=\"list-disc ml-6\">\r\n      <li *ngFor=\"let r of recommendations\" class=\"mt-2\">\r\n        <strong>{{ r.title }}:</strong> {{ r.reason }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div *ngIf=\"rawResponse\" class=\"mt-4\">\r\n    <h2 class=\"text-xl font-semibold\">Raw AI Response</h2>\r\n    <pre class=\"bg-gray-100 p-2 rounded\">{{ rawResponse }}</pre>\r\n  </div>\r\n</div>\r\n","// src/app/app.routes.ts\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { MovieListComponent } from './movies/movie-list/movie-list.component';\r\nimport { MovieDetailComponent } from './movies/movie-detail/movie-detail.component';\r\nimport { WatchlistComponent } from './movies/watchlist/watchlist.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RecommendationsComponent } from './recommendations/recommendations.component';\r\nimport { FlagsComponent } from './admin/flags.component';\r\nimport { AdminMoviesComponent } from './admin/admin-movies.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'movies', component: MovieListComponent, canActivate: [AuthGuard] },\r\n  { path: 'movies/:id', component: MovieDetailComponent, canActivate: [AuthGuard] },\r\n  { path: 'watchlist', component: WatchlistComponent, canActivate: [AuthGuard] }, // ← added\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'recommendations', component: RecommendationsComponent, canActivate: [AuthGuard] },\r\n  { path: 'admin/flags', component: FlagsComponent, canActivate: [AuthGuard] },\r\n  { path: 'admin/movies', component: AdminMoviesComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n","/* File: frontend/src/app/movies/movie-detail/movie-detail.component.ts */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MovieDetail, MovieService } from '../movie.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-movie-detail',\r\n  imports: [CommonModule],\r\n  templateUrl: './movie-detail.component.html',\r\n  styleUrls: ['./movie-detail.component.css']\r\n})\r\nexport class MovieDetailComponent implements OnInit {\r\n  movie?: MovieDetail;\r\n  error = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private movieService: MovieService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (!id) {\r\n      this.error = 'No movie ID provided.';\r\n      return;\r\n    }\r\n    const movieId = +id; // convert string to number\r\n\r\n    this.movieService.getById(movieId).subscribe({\r\n      next: (m) => (this.movie = m),\r\n      error: () => (this.error = 'Failed to load movie details.')\r\n    });\r\n  }\r\n}\r\n","<!-- File: frontend/src/app/movies/movie-detail/movie-detail.component.html -->\r\n<div class=\"pt-20 p-4\">\r\n  <div *ngIf=\"error\" class=\"text-red-500 mb-2\">\r\n    {{ error }}\r\n  </div>\r\n\r\n  <div *ngIf=\"movie\">\r\n    <h1 class=\"text-2xl font-bold mb-4\">{{ movie.title }} ({{ movie.year }})</h1>\r\n    <img [src]=\"movie.posterUrl\" alt=\"{{ movie.title }}\" class=\"mb-4\" />\r\n\r\n    <p class=\"mb-4\">{{ movie.overview }}</p>\r\n\r\n    <h2 class=\"text-xl font-semibold\">Cast</h2>\r\n    <ul class=\"list-disc ml-6\">\r\n      <li *ngFor=\"let c of movie.cast\">\r\n        {{ c.name }} as {{ c.character }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport {\r\n  provideHttpClient,\r\n  withInterceptorsFromDi,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app/app.component';\r\nimport { appRoutes } from './app/app.routes';\r\nimport { AuthInterceptor } from './app/auth/auth.interceptor';\r\n\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nbootstrapApplication(AppComponent, {\r\n  providers: [\r\n    // HTTP client + your interceptor\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n\r\n    // Router\r\n    provideRouter(appRoutes),\r\n\r\n    // Animations\r\n    provideAnimations()\r\n  ]\r\n}).catch(err => console.error(err));\r\n","// File: MyMoviesApp.Client/src/environments/environment.ts\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // Directly point to the .NET API's local URL/port:\r\n  apiUrl: 'http://localhost:5091',\r\n  tmdbImageBaseUrl: 'https://image.tmdb.org/t/p/w500'\r\n};\r\n","// File: MyMoviesApp.Client/src/app/services/auth.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\ninterface AuthResponse {\r\n  token: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private tokenKey = 'token';\r\n\r\n  // We'll call /auth endpoints on the .NET server:\r\n  private baseUrl = `${environment.apiUrl}/auth`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<AuthResponse> {\r\n    return this.http\r\n      .post<AuthResponse>(`${this.baseUrl}/login`, { username, password })\r\n      .pipe(\r\n        tap(res => {\r\n          // Store token in Local Storage for later use\r\n          localStorage.setItem(this.tokenKey, res.token);\r\n        })\r\n      );\r\n  }\r\n\r\n  register(username: string, password: string): Observable<AuthResponse> {\r\n    return this.http\r\n      .post<AuthResponse>(`${this.baseUrl}/register`, { username, password })\r\n      .pipe(\r\n        tap(res => {\r\n          localStorage.setItem(this.tokenKey, res.token);\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  private getPayload(): any | null {\r\n    const token = this.getToken();\r\n    if (!token) return null;\r\n    try {\r\n      // Decode the middle part of the JWT\r\n      return JSON.parse(atob(token.split('.')[1]));\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getUsername(): string | null {\r\n    const payload = this.getPayload();\r\n    // ClaimTypes.Name often gets stored as \"unique_name\" or \"name\" depending on your server\r\n    return payload?.unique_name ?? payload?.name ?? null;\r\n  }\r\n\r\n  getRole(): string | null {\r\n    const payload = this.getPayload();\r\n    return payload?.role ?? null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface FeatureFlag {\r\n  featureFlagId: number;\r\n  name: string;\r\n  isEnabled: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeatureFlagsService {\r\n  private baseUrl = `${environment.apiUrl}/featureflags`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<FeatureFlag[]> {\r\n    return this.http.get<FeatureFlag[]>(this.baseUrl);\r\n  }\r\n\r\n  update(id: number, isEnabled: boolean): Observable<void> {\r\n    return this.http.put<void>(`${this.baseUrl}/${id}`, { isEnabled });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-login',\r\n  imports: [CommonModule, FormsModule, RouterModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  username = '';\r\n  password = '';\r\n  error = '';\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  onSubmit(): void {\r\n    this.error = '';\r\n    this.auth.login(this.username, this.password).subscribe({\r\n      next: () => this.router.navigate(['/']),\r\n      error: () => (this.error = 'Login failed.')\r\n    });\r\n  }\r\n}\r\n","<div class=\"pt-20 p-4 max-w-sm mx-auto\">\r\n  <h2 class=\"text-2xl font-bold mb-4\">Login</h2>\r\n  <form (ngSubmit)=\"onSubmit()\"\r\n        #loginForm=\"ngForm\"\r\n        class=\"space-y-4\">\r\n    <div>\r\n      <label class=\"block mb-1\">Username</label>\r\n      <input name=\"username\"\r\n             [(ngModel)]=\"username\"\r\n             required\r\n             class=\"w-full border p-2 rounded\" />\r\n    </div>\r\n    <div>\r\n      <label class=\"block mb-1\">Password</label>\r\n      <input name=\"password\"\r\n             type=\"password\"\r\n             [(ngModel)]=\"password\"\r\n             required\r\n             class=\"w-full border p-2 rounded\" />\r\n    </div>\r\n    <button type=\"submit\"\r\n            [disabled]=\"loginForm.invalid\"\r\n            class=\"w-full bg-bb-blue text-white py-2 rounded disabled:opacity-50\">\r\n      Login\r\n    </button>\r\n    <p *ngIf=\"error\" class=\"text-red-600 mt-2\">{{ error }}</p>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Movie {\r\n  movieId?: number;\r\n  tmdbId?: string;\r\n  title: string;\r\n  year: number;\r\n  posterUrl: string;\r\n}\r\n\r\nexport interface WatchlistItem {\r\n  watchlistItemId: number;\r\n  movie: Movie;\r\n  addedAt: string;\r\n}\r\n\r\nexport interface CastMember {\r\n  name: string;\r\n  character: string;\r\n}\r\n\r\nexport interface MovieDetail extends Movie {\r\n  overview: string;\r\n  cast: CastMember[];\r\n  userRating?: number;\r\n  masterRating?: number;\r\n}\r\n\r\nexport interface PagedResponse<T> {\r\n  items: T[];\r\n  total: number;\r\n  page: number;\r\n  pageSize: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MovieService {\r\n  private baseUrl = `${environment.apiUrl}/movies`;\r\n  private watchlistUrl = `${environment.apiUrl}/watchlist`;\r\n  private ratingsUrl = `${environment.apiUrl}/ratings`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMovies(\r\n    page: number,\r\n    pageSize: number,\r\n    yearFrom?: number,\r\n    yearTo?: number,\r\n    minRating?: number,\r\n    maxRating?: number\r\n  ): Observable<PagedResponse<Movie>> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('pageSize', pageSize.toString());\r\n    if (yearFrom != null) params = params.set('yearFrom', yearFrom.toString());\r\n    if (yearTo != null) params = params.set('yearTo', yearTo.toString());\r\n    if (minRating != null) params = params.set('minRating', minRating.toString());\r\n    if (maxRating != null) params = params.set('maxRating', maxRating.toString());\r\n\r\n    return this.http.get<PagedResponse<Movie>>(this.baseUrl, { params });\r\n  }\r\n\r\n  search(query: string) {\r\n    return this.http.get<Movie[]>(\r\n      `${this.baseUrl}/search?query=${encodeURIComponent(query)}`\r\n    );\r\n  }\r\n\r\n  getById(id: number) {\r\n    return this.http.get<MovieDetail>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  getWatchlist() {\r\n    return this.http.get<WatchlistItem[]>(this.watchlistUrl);\r\n  }\r\n\r\n  addToWatchlist(movieId: number) {\r\n    return this.http.post(this.watchlistUrl, { MovieId: movieId });\r\n  }\r\n\r\n  removeFromWatchlist(movieId: number) {\r\n    return this.http.delete(`${this.watchlistUrl}/${movieId}`);\r\n  }\r\n\r\n  rateMovie(movieId: number, score: number) {\r\n    return this.http.post(this.ratingsUrl, { MovieId: movieId, Score: score });\r\n  }\r\n\r\n  removeRating(movieId: number) {\r\n    return this.http.delete(`${this.ratingsUrl}/${movieId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Movie } from '../movies/movie.service';\r\n\r\nexport interface AdminRating {\r\n  movieId: number;\r\n  tmdbId: string;\r\n  title: string;\r\n  year: number;\r\n  posterUrl: string;\r\n  score: number;\r\n}\r\n\r\nexport interface TrendingMovie extends Movie {\r\n  averageRating: number;\r\n  ratingCount: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HomeService {\r\n  private api = `${environment.apiUrl}/movies`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAdminRatings(): Observable<AdminRating[]> {\r\n    return this.http.get<AdminRating[]>(`${this.api}/admin-ratings`);\r\n  }\r\n\r\n  getTrending(): Observable<TrendingMovie[]> {\r\n    return this.http.get<TrendingMovie[]>(`${this.api}/trending`);\r\n  }\r\n}\r\n","// src/app/home/home.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { HomeService, AdminRating, TrendingMovie } from './home.service';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-home',\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  featured: AdminRating[] = [];\r\n  trending: TrendingMovie[] = [];\r\n  loadingFeatured = true;\r\n  loadingTrending = true;\r\n  error = '';\r\n\r\n  imageBaseUrl = environment.tmdbImageBaseUrl;\r\n\r\n  // <-- router made public\r\n  constructor(\r\n    private homeSvc: HomeService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.homeSvc.getAdminRatings().subscribe({\r\n      next: data => { this.featured = data; this.loadingFeatured = false; },\r\n      error: () => { this.error = 'Failed to load featured picks.'; this.loadingFeatured = false; }\r\n    });\r\n\r\n    this.homeSvc.getTrending().subscribe({\r\n      next: data => { this.trending = data; this.loadingTrending = false; },\r\n      error: () => { this.error = 'Failed to load trending movies.'; this.loadingTrending = false; }\r\n    });\r\n  }\r\n\r\n  viewMovie(id: number): void {\r\n    this.router.navigate(['/movies', id]);\r\n  }\r\n}\r\n","<div class=\"pt-16 bg-gray-50 min-h-screen p-4 space-y-12\">\r\n  <!-- Hero -->\r\n  <div class=\"relative h-56 bg-cover bg-center rounded-lg overflow-hidden\" style=\"background-image:url('/assets/hero.jpg')\">\r\n    <div class=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <h1 class=\"text-4xl text-white font-bold\">Welcome to MyMoviesApp</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Featured Picks -->\r\n  <section>\r\n    <h2 class=\"text-2xl font-semibold mb-2\">Featured Picks</h2>\r\n    <div *ngIf=\"loadingFeatured\" class=\"text-gray-500\">Loading…</div>\r\n    <div class=\"flex space-x-4 overflow-x-auto pb-2\" *ngIf=\"!loadingFeatured\">\r\n      <div *ngFor=\"let f of featured\"\r\n           class=\"min-w-[180px] bg-white rounded shadow cursor-pointer\"\r\n           (click)=\"viewMovie(f.movieId)\">\r\n        <img [src]=\"imageBaseUrl + f.posterUrl\"\r\n             alt=\"{{ f.title }}\"\r\n             class=\"w-full h-40 object-cover rounded-t\" />\r\n        <div class=\"p-2\">\r\n          <h3 class=\"font-medium\">{{ f.title }}</h3>\r\n          <p class=\"text-sm text-gray-600\">Score: {{ f.score }}/10</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- Trending Now -->\r\n  <section>\r\n    <h2 class=\"text-2xl font-semibold mb-2\">Trending Now</h2>\r\n    <div *ngIf=\"loadingTrending\" class=\"text-gray-500\">Loading…</div>\r\n    <div class=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 gap-4\" *ngIf=\"!loadingTrending\">\r\n      <div *ngFor=\"let t of trending\"\r\n           class=\"bg-white rounded shadow overflow-hidden cursor-pointer\"\r\n           (click)=\"viewMovie(t.movieId)\">\r\n        <img [src]=\"imageBaseUrl + t.posterUrl\"\r\n             alt=\"{{ t.title }}\"\r\n             class=\"w-full h-32 object-cover\" />\r\n        <div class=\"p-2\">\r\n          <h3 class=\"text-sm font-medium\">{{ t.title }}</h3>\r\n          <p class=\"text-xs text-gray-500\">{{ t.averageRating }}/10 ({{ t.ratingCount }})</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- Quick Links -->\r\n  <section class=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n    <button (click)=\"router.navigate(['/watchlist'])\"\r\n            class=\"bg-bb-blue text-white rounded py-4 shadow hover:bg-opacity-90\">\r\n      My Watchlist\r\n    </button>\r\n    <button (click)=\"router.navigate(['/movies'])\"\r\n            class=\"bg-bb-yellow text-black rounded py-4 shadow hover:opacity-90\">\r\n      Browse Movies\r\n    </button>\r\n    <button (click)=\"router.navigate(['/recommendations'])\"\r\n            class=\"bg-green-500 text-white rounded py-4 shadow hover:opacity-90\">\r\n      AI Recommendations\r\n    </button>\r\n  </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-navbar',\r\n  imports: [CommonModule, FormsModule, RouterModule],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  searchTerm = '';\r\n  isDarkMode = false;\r\n\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isDarkMode = document.documentElement.classList.contains('dark');\r\n  }\r\n\r\n  logout(): void {\r\n    this.auth.logout();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  onSearch(): void {\r\n    const q = this.searchTerm.trim();\r\n    if (q) {\r\n      this.router.navigate(['/movies'], { queryParams: { q } });\r\n    }\r\n    this.searchTerm = '';\r\n  }\r\n\r\n  toggleDarkMode(): void {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    if (this.isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }\r\n}\r\n","<!-- src/app/shared/navbar/navbar.component.html -->\r\n<nav class=\"fixed top-0 left-0 right-0 h-16 bg-bb-blue text-white px-4 flex items-center space-x-4 z-50 dark:bg-gray-900\">\r\n  <!-- Logo / Home Link -->\r\n  <a routerLink=\"/\" class=\"flex items-center space-x-2\">\r\n    <img src=\"assets/logo.png\" alt=\"Logo\" class=\"h-8 w-8\" />\r\n    <span class=\"text-2xl font-bold\">MyMoviesApp</span>\r\n  </a>\r\n\r\n  <!-- Navigation Links -->\r\n  <a routerLink=\"/\" routerLinkActive=\"underline\">Home</a>\r\n  <a *ngIf=\"auth.isLoggedIn()\" routerLink=\"/movies\" routerLinkActive=\"underline\">Movies</a>\r\n  <a *ngIf=\"auth.isLoggedIn()\" routerLink=\"/watchlist\" routerLinkActive=\"underline\">Watchlist</a>\r\n  <a *ngIf=\"auth.isLoggedIn()\" routerLink=\"/recommendations\" routerLinkActive=\"underline\">Recommendations</a>\r\n  <a *ngIf=\"auth.isLoggedIn()\" routerLink=\"/profile\" routerLinkActive=\"underline\">Profile</a>\r\n  <a *ngIf=\"!auth.isLoggedIn()\" routerLink=\"/login\" routerLinkActive=\"underline\">Login</a>\r\n  <a *ngIf=\"!auth.isLoggedIn()\" routerLink=\"/register\" routerLinkActive=\"underline\">Register</a>\r\n\r\n  <!-- Username & Logout -->\r\n  <span *ngIf=\"auth.isLoggedIn()\" class=\"ml-auto text-bb-yellow\">\r\n    {{ auth.getUsername() }}\r\n  </span>\r\n  <button *ngIf=\"auth.isLoggedIn()\"\r\n          (click)=\"logout()\"\r\n          class=\"bg-bb-yellow text-black px-3 py-1 rounded\">\r\n    Logout\r\n  </button>\r\n\r\n  <!-- Search Form -->\r\n  <form (ngSubmit)=\"onSearch()\" class=\"flex ml-4\">\r\n    <input [(ngModel)]=\"searchTerm\"\r\n           name=\"search\"\r\n           placeholder=\"Search all movies…\"\r\n           class=\"px-2 py-1 rounded-l border-2 border-bb-yellow bg-white text-black\" />\r\n    <button type=\"submit\" class=\"bg-bb-yellow text-black px-4 rounded-r\">\r\n      Go\r\n    </button>\r\n  </form>\r\n\r\n  <!-- Dark/Light Mode Toggle -->\r\n  <button (click)=\"toggleDarkMode()\"\r\n          class=\"ml-4 p-1 rounded bg-gray-200 text-gray-800 dark:bg-gray-800 dark:text-gray-200\"\r\n          aria-label=\"Toggle dark mode\">\r\n    <span *ngIf=\"!isDarkMode\">🌙</span>\r\n    <span *ngIf=\"isDarkMode\">☀️</span>\r\n  </button>\r\n</nav>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (this.auth.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FeatureFlagsService, FeatureFlag } from './feature-flags.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-flags',\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './flags.component.html',\r\n  styleUrls: ['./flags.component.css']\r\n})\r\nexport class FlagsComponent implements OnInit {\r\n  flags: FeatureFlag[] = [];\r\n  error = '';\r\n\r\n  constructor(\r\n    private flagsService: FeatureFlagsService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Only Admins\r\n    if (this.auth.getRole() !== 'Admin') {\r\n      this.error = 'Access denied';\r\n      return;\r\n    }\r\n    this.loadFlags();\r\n  }\r\n\r\n  loadFlags(): void {\r\n    this.flagsService.getAll().subscribe({\r\n      next: data => {\r\n        this.flags = data;\r\n      },\r\n      error: () => {\r\n        this.error = 'Failed to load feature flags.';\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle(f: FeatureFlag): void {\r\n    this.flagsService.update(f.featureFlagId, !f.isEnabled).subscribe({\r\n      next: () => this.loadFlags(),\r\n      error: () => (this.error = 'Failed to update flag.')\r\n    });\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n  <h1 class=\"text-2xl font-bold mb-4\">Feature Flags Admin</h1>\r\n\r\n  <p *ngIf=\"error\" class=\"text-red-600 mb-4\">{{ error }}</p>\r\n\r\n  <table class=\"min-w-full table-auto bg-white shadow rounded\">\r\n    <thead>\r\n      <tr class=\"bg-gray-200\">\r\n        <th class=\"px-4 py-2 text-left\">Name</th>\r\n        <th class=\"px-4 py-2 text-left\">Enabled</th>\r\n        <th class=\"px-4 py-2\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let f of flags\">\r\n        <td class=\"border px-4 py-2\">{{ f.name }}</td>\r\n        <td class=\"border px-4 py-2\">{{ f.isEnabled }}</td>\r\n        <td class=\"border px-4 py-2\">\r\n          <button (click)=\"toggle(f)\"\r\n                  class=\"bg-blue-600 text-white px-3 py-1 rounded\">\r\n            {{ f.isEnabled ? 'Disable' : 'Enable' }}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface AdminCreateDto {\r\n  title: string;\r\n  tmdbId?: string;\r\n  year: number;\r\n  posterUrl: string;\r\n  score: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdminMoviesService {\r\n  private url = `${environment.apiUrl}/movies/admin-create`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createAndRate(dto: AdminCreateDto): Observable<{ movieId: number }> {\r\n    return this.http.post<{ movieId: number }>(this.url, dto);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminMoviesService } from './admin-movies.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-admin-movies',\r\n  imports: [CommonModule, FormsModule, RouterModule],\r\n  templateUrl: './admin-movies.component.html',\r\n  styleUrls: ['./admin-movies.component.css']\r\n})\r\nexport class AdminMoviesComponent {\r\n  error = '';\r\n  success = '';\r\n\r\n  constructor(private svc: AdminMoviesService) { }\r\n\r\n  onSubmit(f: NgForm): void {\r\n    if (f.invalid) return;\r\n    const dto = f.value;\r\n    this.svc.createAndRate(dto).subscribe({\r\n      next: res => {\r\n        this.success = `Movie added (ID: ${res.movieId}) and rated!`;\r\n        this.error = '';\r\n        f.resetForm();\r\n      },\r\n      error: () => {\r\n        this.error = 'Failed to add movie.';\r\n        this.success = '';\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"pt-20 p-4 max-w-lg mx-auto space-y-4\">\r\n  <h2 class=\"text-2xl font-bold\">Admin: Add Movie & Rate</h2>\r\n\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" class=\"space-y-4\">\r\n    <label class=\"block\">\r\n      Title\r\n      <input name=\"title\" ngModel required class=\"w-full border p-2 rounded\" />\r\n    </label>\r\n\r\n    <label class=\"block\">\r\n      TMDb ID (optional)\r\n      <input name=\"tmdbId\" ngModel class=\"w-full border p-2 rounded\" />\r\n      <small class=\"text-gray-500\">If blank, manual entry.</small>\r\n    </label>\r\n\r\n    <label class=\"block\">\r\n      Year\r\n      <input name=\"year\" type=\"number\" ngModel required class=\"w-full border p-2 rounded\" />\r\n    </label>\r\n\r\n    <label class=\"block\">\r\n      Poster URL\r\n      <input name=\"posterUrl\" ngModel required class=\"w-full border p-2 rounded\" />\r\n    </label>\r\n\r\n    <label class=\"block\">\r\n      Score (1–10)\r\n      <input name=\"score\"\r\n             type=\"number\"\r\n             min=\"1\"\r\n             max=\"10\"\r\n             ngModel\r\n             required\r\n             class=\"w-full border p-2 rounded\" />\r\n    </label>\r\n\r\n    <button type=\"submit\" [disabled]=\"f.invalid\" class=\"bg-bb-blue text-white px-4 py-2 rounded\">\r\n      Add & Rate\r\n    </button>\r\n\r\n    <p *ngIf=\"error\" class=\"text-red-600\">{{ error }}</p>\r\n    <p *ngIf=\"success\" class=\"text-green-600\">{{ success }}</p>\r\n  </form>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  standalone: true,\r\n  selector: 'app-register',\r\n  imports: [CommonModule, FormsModule, RouterModule],\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  username = '';\r\n  password = '';\r\n  error = '';\r\n  success = '';\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  onSubmit(): void {\r\n    this.error = '';\r\n    this.success = '';\r\n    this.auth.register(this.username, this.password).subscribe({\r\n      next: () => {\r\n        this.success = 'Registration successful! You can now log in.';\r\n      },\r\n      error: () => (this.error = 'Registration failed.')\r\n    });\r\n  }\r\n}\r\n","<div class=\"pt-20 p-4 max-w-sm mx-auto\">\r\n  <h2 class=\"text-2xl font-bold mb-4\">Register</h2>\r\n  <form (ngSubmit)=\"onSubmit()\"\r\n        #regForm=\"ngForm\"\r\n        class=\"space-y-4\">\r\n    <div>\r\n      <label class=\"block mb-1\">Username</label>\r\n      <input name=\"username\"\r\n             [(ngModel)]=\"username\"\r\n             required\r\n             class=\"w-full border p-2 rounded\" />\r\n    </div>\r\n    <div>\r\n      <label class=\"block mb-1\">Password</label>\r\n      <input name=\"password\"\r\n             type=\"password\"\r\n             [(ngModel)]=\"password\"\r\n             required\r\n             minlength=\"6\"\r\n             class=\"w-full border p-2 rounded\" />\r\n    </div>\r\n    <button type=\"submit\"\r\n            [disabled]=\"regForm.invalid\"\r\n            class=\"w-full bg-bb-blue text-white py-2 rounded disabled:opacity-50\">\r\n      Register\r\n    </button>\r\n    <p *ngIf=\"success\" class=\"text-green-600 mt-2\">{{ success }}</p>\r\n    <p *ngIf=\"error\" class=\"text-red-600 mt-2\">{{ error }}</p>\r\n  </form>\r\n</div>\r\n"],"names":["CommonModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","WatchlistComponent_div_4_li_2_Template_button_click_7_listener","item_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","remove","movie","movieId","ɵɵadvance","ɵɵpropertyInterpolate","title","ɵɵproperty","imageBaseUrl","posterUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","year","ɵɵtemplate","WatchlistComponent_div_4_li_2_Template","watchlist","error","WatchlistComponent","movieService","loading","tmdbImageBaseUrl","constructor","ngOnInit","getWatchlist","subscribe","next","data","id","removeFromWatchlist","filter","w","console","ɵɵdirectiveInject","i1","MovieService","selectors","decls","vars","consts","template","WatchlistComponent_Template","rf","ctx","WatchlistComponent_div_3_Template","WatchlistComponent_div_4_Template","WatchlistComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","WatchlistComponent_p_7_Template","length","empty_r4","i2","NgForOf","NgIf","styles","NavbarComponent","RouterModule","AppComponent","AppComponent_Template","ProfileComponent","auth","username","role","getUsername","getRole","AuthService","ProfileComponent_Template","ɵɵtextInterpolate1","FormsModule","ɵɵelementContainerStart","ɵɵpureFunction1","_c0","m_r1","ctx_r1","MovieListComponent","movies","page","pageSize","totalItems","totalPages","yearFrom","yearTo","minRating","maxRating","loadPage","getMovies","items","total","Math","ceil","applyFilters","prevPage","nextPage","MovieListComponent_Template","MovieListComponent_Template_form_ngSubmit_1_listener","MovieListComponent_ng_container_3_Template","MovieListComponent_Template_button_click_5_listener","MovieListComponent_Template_button_click_9_listener","MovieListComponent_p_11_Template","ɵɵtextInterpolate2","i3","ɵNgNoValidate","NgControlStatusGroup","NgForm","i4","RouterLink","AuthInterceptor","intercept","req","token","getToken","authReq","clone","setHeaders","Authorization","handle","ɵɵinject","factory","ɵfac","HttpClientModule","ctx_r0","r_r2","reason","RecommendationsComponent_div_10_li_4_Template","recommendations","rawResponse","RecommendationsComponent","http","prompt","getRecommendations","post","apiUrl","Array","isArray","err","HttpClient","RecommendationsComponent_Template","ɵɵtwoWayListener","RecommendationsComponent_Template_textarea_ngModelChange_6_listener","$event","ɵɵtwoWayBindingSet","RecommendationsComponent_Template_button_click_7_listener","RecommendationsComponent_p_9_Template","RecommendationsComponent_div_10_Template","RecommendationsComponent_div_11_Template","ɵɵtwoWayProperty","DefaultValueAccessor","NgControlStatus","NgModel","HomeComponent","LoginComponent","RegisterComponent","MovieDetailComponent","FlagsComponent","AdminMoviesComponent","AuthGuard","appRoutes","path","component","canActivate","redirectTo","c_r2","name","character","MovieDetailComponent_div_2_li_9_Template","overview","cast","route","snapshot","paramMap","get","getById","m","ActivatedRoute","MovieDetailComponent_Template","MovieDetailComponent_div_1_Template","MovieDetailComponent_div_2_Template","enableProdMode","bootstrapApplication","provideHttpClient","withInterceptorsFromDi","HTTP_INTERCEPTORS","provideRouter","provideAnimations","production","providers","provide","useClass","multi","catch","tap","tokenKey","baseUrl","login","password","pipe","res","localStorage","setItem","register","logout","removeItem","isLoggedIn","getItem","getPayload","JSON","parse","atob","split","payload","unique_name","providedIn","FeatureFlagsService","getAll","update","isEnabled","put","router","onSubmit","navigate","Router","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_3_listener","LoginComponent_Template_input_ngModelChange_8_listener","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_p_15_Template","loginForm_r3","invalid","RequiredValidator","HttpParams","watchlistUrl","ratingsUrl","params","set","toString","search","query","encodeURIComponent","addToWatchlist","MovieId","delete","rateMovie","score","Score","removeRating","HomeService","api","getAdminRatings","getTrending","HomeComponent_div_9_div_1_Template_div_click_0_listener","f_r2","viewMovie","HomeComponent_div_9_div_1_Template","featured","HomeComponent_div_14_div_1_Template_div_click_0_listener","t_r5","_r4","averageRating","ratingCount","HomeComponent_div_14_div_1_Template","trending","homeSvc","loadingFeatured","loadingTrending","HomeComponent_Template","HomeComponent_div_8_Template","HomeComponent_div_9_Template","HomeComponent_div_13_Template","HomeComponent_div_14_Template","HomeComponent_Template_button_click_16_listener","HomeComponent_Template_button_click_18_listener","HomeComponent_Template_button_click_20_listener","NavbarComponent_button_14_Template_button_click_0_listener","_r2","searchTerm","isDarkMode","document","documentElement","classList","contains","onSearch","q","trim","queryParams","toggleDarkMode","add","NavbarComponent_Template","NavbarComponent_a_7_Template","NavbarComponent_a_8_Template","NavbarComponent_a_9_Template","NavbarComponent_a_10_Template","NavbarComponent_a_11_Template","NavbarComponent_a_12_Template","NavbarComponent_span_13_Template","NavbarComponent_button_14_Template","NavbarComponent_Template_form_ngSubmit_15_listener","NavbarComponent_Template_input_ngModelChange_16_listener","NavbarComponent_Template_button_click_19_listener","NavbarComponent_span_20_Template","NavbarComponent_span_21_Template","RouterLinkActive","FlagsComponent_tr_13_Template_button_click_6_listener","f_r3","toggle","flagsService","flags","loadFlags","f","featureFlagId","FlagsComponent_Template","FlagsComponent_p_3_Template","FlagsComponent_tr_13_Template","AdminMoviesService","url","createAndRate","dto","success","svc","value","resetForm","AdminMoviesComponent_Template","AdminMoviesComponent_Template_form_ngSubmit_3_listener","ɵɵreference","AdminMoviesComponent_p_24_Template","AdminMoviesComponent_p_25_Template","NumberValueAccessor","MinValidator","MaxValidator","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_3_listener","RegisterComponent_Template_input_ngModelChange_8_listener","RegisterComponent_Template_input_ngModelChange_12_listener","RegisterComponent_p_15_Template","RegisterComponent_p_16_Template","regForm_r3","MinLengthValidator"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}